{
    "openapi": "3.0.0",
    "info": {
        "title": "Challenge FSW 3 chapter 5",
        "description": "API description in Markdown.",
        "version": "1.0.0"
    },
    "tags": [
        {
            "name": "Shops",
            "description": "This is API for managing CRUD SHOPS"
        },
        {
            "name": "Users",
            "description": "This is API for managing CRUD USERS"
        },
        {
            "name": "Products",
            "description": "This is API for managing CRUD PRODUCTS"
        }
    ],
    "servers": [
        {
            "url": "http://localhost:3000/api/v1/"
        }
    ],
    "paths": {
        "/shops": {
            "get": {
                "tags": [
                    "Shops"
                ],
                "summary": "Returns a list of shops.",
                "description": "This is API for get all shop data",
                "responses": {
                    "200": {
                        "description": "Success get shops data"
                    }
                }
            }
        },
        "/shops/:id'":{
            "get": {
                "tags": [
                    "Shops"
                ],
                "summary": "Returns a list of shops by id.",
                "description": "This is API for get shop data by id",
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success get shops data by id"
                    }
                }
            },
            "put": {
                "tags": [
                    "Shops"
                ],
                "summary": "Update shops by id.",
                "description": "This is API for update shop by id",
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "description": "Success edit shop",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "toko jeno"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "bandung"
                                    },
                                    "userId": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success update shop by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "toko jeno"
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "example": "bandung"
                                                },
                                                "userId": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed because name shop is empty",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed because shop name empty"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }                
            }
        },
        "/shops/create": {
            "post": {
                "tags": [
                    "Shops"
                ],
                "summary": "Success creaete shop",
                "description": "This is API for create new shop, only user role can create new shop.",
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "description": "Success create new shop",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "toko imam"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "bandung"
                                    },
                                    "userId": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success create new Shop",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "toko imam"
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "example": "bandung"
                                                },
                                                "userId": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed because name shop is empty",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed because shop name empty"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Returns a list of users.",
                "description": "This is API for get all user data",
                "responses": {
                    "200": {
                        "description": "Success get user data"
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Success create user",
                "description": "This is API for create new user.",
                "requestBody": {
                    "description": "Success create user",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "chenle"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "jie1234"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "user"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success create new User",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "chenle"
                                                },
                                                "password": {
                                                    "type": "string",
                                                    "example": "jie1234"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "user"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed because username is empty",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed because username is empty"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failed because username is already exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed because username is already exist"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Success login user",
                "description": "This is API for login user.",
                "requestBody": {
                    "description": "Success login user",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "chenle"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "jie1234"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success create new User",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "chenle"
                                                },
                                                "password": {
                                                    "type": "string",
                                                    "example": "jie1234"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "user"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed because username is empty",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed because username is empty"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Returns a list of products.",
                "description": "This is API for get all products data",
                "responses": {
                    "200": {
                        "description": "Success get products data"
                    }
                }
            }
        },
        "/products/create": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Success create products",
                "description": "This is API for create new products.",
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "description": "Success create products",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Avanza"
                                    },
                                    "price": {
                                        "type": "integer",
                                        "example": "10000000"
                                    },
                                    "stock": {
                                        "type": "integer",
                                        "example": "10"
                                    },
                                    "shopId": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success create new Products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "Avanza"
                                                },
                                                "price": {
                                                    "type": "integer",
                                                    "example": "10000000"
                                                },
                                                "stock": {
                                                    "type": "integer",
                                                    "example": "10"
                                                },
                                                "shopId": {
                                                    "type": "integer",
                                                    "example": "1"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed because products is empty",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed because products is empty"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "shops": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "toko imam"
                    },
                    "city": {
                        "type": "string",
                        "example": "bandung"
                    },
                    "userId": {
                        "type": "integer",
                        "example": 1
                    }
                }
            },
            "users": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "example": "chenle"
                    },
                    "password": {
                        "type": "string",
                        "example": "jie1234"
                    },
                    "role": {
                        "type": "string",
                        "example": "user"
                    }
                }
            },
            "products": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Avanza"
                    },
                    "price": {
                        "type": "integer",
                        "example": "10000000"
                    },
                    "stock": {
                        "type": "integer",
                        "example": "10"
                    },
                    "shopId": {
                        "type": "integer",
                        "example": "1"
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerToken": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    }
}